-------------------------------------通过正则表达式来调用----------------------
1 判断一个字符串是否合法
  var msg = '888888';
  var reg = /^\d{6}$/; //正则表达式对象
  reg.test(msg)   //返回值为true或false     相当于c#的isMatch()方法

2 提取字符串
  var msg = '中国移动：10086中国联通：10010中国电信10000中国工商银行95588';
  var reg=/\d{5}/g ;   //正则表达式对象 （注意用g来全局匹配）
  var result=reg.exec(msg);  //返回的是一个数组，如果匹配到末尾再匹配就是null(第一项：整个正则匹配到的结果，后面是各组的匹配结果)
  while(result){
     alert(result);
     result=reg.exec(msg);  //反复匹配来获取每个匹配结果，相当于c#的match()和matches()
  }

---------------------字符串的正则表达式=======================================
1 使用字符串的match方法来提取字符串
  var msg = '中奖名单：张三：18999141365。李四：13488888888。王五：13888888888';
  var result=msg.match(/\d{11}/g);  //直接返回所有匹配结果的数组，比exec好用
  alert(result); // 18999141365,13488888888,13888888888

  var result1=msg.match(/(\d{3})(\d{4})(\d{4})/);  //不加g 返回第一个匹配结果的分组信息数组
  alert(result1);  //18999141365,189,9914,1365

  var result2=msg.match(/(\d{3})(\d{4})(\d{4})/g);  //加了g后，即便有分组信息也不显示，所以要使用exec()
  alert(result2);  //18999141365,13488888888,13888888888
   
2 使用字符串的replace方法来替换字符串 
  var msg = '中奖名单：张三：18999141365。李四：13488888888。王五：13888888888';
  var result = msg.replace('坤', '钱');   //默认吧第一个字符当成正则表达式，但只能匹配第一个
  alert(result);

  var result1=msg.replace(/(\d{3})(\d{4})(\d{4})/g,'$1****$3');  
  alert(result1);

3 使用字符串的search方法返回与regexp相匹配的第一个子字符串的位置
  var result2=msg.search(/\d{3}/g);  //8