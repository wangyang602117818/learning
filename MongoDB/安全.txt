默认启动的 mongodb 服务是没有安全认证的(局域网用户都可以访问,不需要用户名和密码)
	1) 使用 ./mongo 登陆mongo的命令行,创建管理所有用户的用户
	use admin
	db.createUser(
	  {
		user: "userAdmin",
		pwd: "123",
		roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
	  }
	)
	db.system.users.find()       //列出所有用户
	db.dropUser("userAdmin");    //删除用户
	2) 启用安全认证: 在 mongodb.conf 中加入 
	security:
		authorization: enabled
	重启mongo服务.这时登陆需要用户名和密码了(此用户仅仅具有管理 用户/角色 的功能,不具备操作数据的功能)
		1)在connection时候认证:  
			./mongo -u "userAdmin" -p "123" --authenticationDatabase "admin"
		2)在shell内部认证: (返回 1 表示成功)
			use admin
			db.auth("userAdmin","123")
	3) 使用 userAdmin 登陆创建其他用户
		案例一:所有数据库的 read,但是看不了系统数据表的内容
			db.createUser(
			  {
				user: "wang",
				pwd: "123",
				roles: [ { role: "readAnyDatabase", db: "admin" } ]
			  }
			)
		案例二：所有数据库的 read write，但是看不了系统数据表的内容
			db.createUser(
			  {
				user: "x",
				pwd: "123",
				roles: [ { role: "readWriteAnyDatabase", db: "admin" } ]
			  }
			)
		案例二: 所有数据库的 admin,但是看不了系统数据表的内容
			db.createUser(
			  {
				user: "yang",
				pwd: "123",
				roles: [ { role: "dbAdminAnyDatabase", db: "admin" } ]
			  }
			)

一般的：
创建一个至高权限的用户，给自己组的用户使用，
use admin
db.createUser(
	 {
		user: "wang",
		pwd: "123",
		roles: [ { role: "root", db: "admin" } ]
	}
)
创建一个只读的给其他人使用
use admin
db.createUser(
	 {
		user: "yang",
		pwd: "123",
		roles: [ { role: "readAnyDatabase", db: "admin" },{ role: "read", db: "local" }]
	}
)
更新用户
use admin
db.updateUser(
   "user123",
   {
      pwd: "KNlZmiaNUp0B"
   }
)
===================================================================
服务器与服务器之间用keyFile来认证，客户端与服务器用user认证
							keyFile生成方法：
								openssl rand -base64 756 > <path-to-keyfile>
								chmod 400 <path-to-keyfile>
配置文件(经过测试：要启用用户名和密码，则每个副本集的节点必须启用keyFile)
security:
    authorization: enabled                  //client与server
	keyFile: D:\MongoDB3.4\key              //server与server
=================================================================
案例1：
对于已经有的集群，创建用户:
在不配置 security 节点的情况下 
	1) 主节点添加好所有的账户 
	2) 配置文件中启用 security(authorization,keyFile)节点 
	3) 重启所有节点 ok
	
